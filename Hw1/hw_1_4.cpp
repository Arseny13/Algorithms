/*Вычисление полинома
Быстрое вычисление полинома — важная составляющая многих алгоритмов.

В данной задаче нужно вычислить значение полинома anxn+an-1xn-1+...+a2x2+a1x1+a0

Так как степени и коэффициенты могут быть достаточно большими, чтобы результат был представим в виде элементарного числа, будем вычислять вычислить значение полинома по модулю MOD. Сделать это предлагается для нескольких значений аргумента.

Формат входных данных
Первая строка файла содержит три числа — степень полинома 2<=N<=100000, количество вычисляемых значений аргумента 1<=M<=10000 и модуль 10<=MOD<=109.

Следующие N+1 строк содержат значения коэффициентов полинома 0<=ai<=10**9.

В очередных M строках содержатся значения аргументов 0<=xi<=10**9.

Во втором примере вычисляются последние цифры в десятичном представлении полинома x5 от чисел 1,2,..9. Интересно, что пятые степени всех натуральных чисел заканчиваются на последнюю цифру аргумента.

Формат результата
Выходной файл должен состоять из ровно M строк — значений данного полинома при заданных значениях аргументов по модулю MOD



*/





#include <bits/stdc++.h>

using namespace std;


unsigned long long sum_mod(long x,long degree,long *coefficient, long mod, unsigned long long sum0)
{




    for(unsigned long j=0;j<degree ;j++)
            {
              sum0 = (sum0 * x + coefficient[j+1]) % mod;
            }

    return sum0;
}

int main()
{
    long  N , M, MOD ;


    cin >> N >> M >> MOD ;
    long a_k[N+1];

    for (unsigned long i=0;i<N+1;i++)
    {
        long a;
        cin>>a ;

        a_k[i]=a%MOD;

    }
    unsigned long long sum0=a_k[0];
    for (unsigned long index=0;index<M;index++)
    {
        long x;
        cin>> x;
        x%=MOD;
        cout << sum_mod(x,N,a_k,MOD,sum0)<<endl;
    }
return 0;
}
  /* #include <ctime>
   ifstream cin("imput_4.txt");
    ofstream cout("out.txt");
    unsigned int end_time = clock();

    return end_time/1000*/
